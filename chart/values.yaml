
replicaCount: 1

image:
  repository: ghcr.io/krateoplatformops/log-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

#imagePullSecrets:
#  - name: cr-token

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  create: true
  type: ClusterIP
  port: 80

containerPorts:
  - name: http
    containerPort: 8080
    protocol: TCP

podlivenessProbe:
  httpGet:
    path: /ping
    port: 8080
  timeoutSeconds: 5
  periodSeconds: 30

podReadinessProbe:
  httpGet:
    path: /ping
    port: 8080
  timeoutSeconds: 5
  periodSeconds: 30

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: kong
  hosts:
    - host: log.krateo.site
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: log.krateo.site
            port:
              number: 80
  tls: []
  #  - secretName: log-krateo-tls
  #    hosts:
  #      - log.krateo.site

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

podEnvFrom:
    - configMapRef:
        name: krateo-uri-config

podEnv:
  - name: 'LOG_LEVEL'
    value: debug
  - name: 'MONGODB_URI'
    valueFrom:
      secretKeyRef:
        name: krateo-secret
        key: MONGODB_URI
